package org.openimaj.video.capture;
import org.bridj.Pointer;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.cpp.CPPObject;
import org.bridj.cpp.CPPRuntime;

/**
 * <i>native declaration : line 1</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("OpenIMAJGrabber")
@Runtime(CPPRuntime.class)
public final class Device extends CPPObject {
	public Device() {
		super();
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	public Device(Pointer pointer) {
		super(pointer);
	}
	
	/// C type : const char*
	@Field(0) 
	protected Pointer<Byte > name() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : const char*
	@Field(0) 
	protected Device name(Pointer<Byte > name) {
		this.io.setPointerField(this, 0, name);
		return this;
	}
	/// C type : const char*
	@Field(1) 
	protected Pointer<Byte > identifier() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : const char*
	@Field(1) 
	protected Device identifier(Pointer<Byte > identifier) {
		this.io.setPointerField(this, 1, identifier);
		return this;
	}
	
	protected native Pointer<Byte> getName();
	
	public String getNameStr() {
		return getName().getCString();
	}
	
	protected native Pointer<Byte> getIdentifier();
	
	public String getIdentifierStr() {
		return getIdentifier().getCString();
	}
	
	@Override
	public String toString() {
		return String.format("Device[%s]=\"%s\"", getIdentifierStr(), getNameStr());
	}
}
